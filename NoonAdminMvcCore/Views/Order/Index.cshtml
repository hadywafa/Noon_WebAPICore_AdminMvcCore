

@{
    ViewData["Title"] = "Order List";
}
@model EFModel.Models.PaginatedList<EFModel.Models.EFModels.Order>





<div class="container">


    @*<div class="mb-5 ">
        <select action="Index" class="form-control">
            <option value="@EFModel.Enums.DeliveryStatus.Processing" class="text-primary">  Processing </option>
            <option value="@EFModel.Enums.DeliveryStatus.Shipped" class="text-info">  Shipped </option>
            <option value="@EFModel.Enums.DeliveryStatus.Delivered" class="text-success">  Delivered </option>
            <option value="@EFModel.Enums.DeliveryStatus.Returned" class="text-danger">  Returned </option>
            <option value="@EFModel.Enums.DeliveryStatus.Cancelled" class="text-warning">  Cancelled </option>
        </select>
    </div>*@

    <div>

        <table class="table table-striped ">

            <thead>
            <th>Order Date</th>
            <th>Total Price</th>
            <th>Payment</th>
            <th>Discount</th>
            <th>Delivery State</th>
            <th>Product List</th>
            <th>Edit</th>
            </thead>

            <tbody>

                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.OrderDate</td>
                        <td>@order.TotalPrice</td>
                        <td>@(order.IsPaid?"Card":"Cash")</td>
                        <td>@order.Discount</td>
                        @{ var color = "secondary";
                            switch (order.DeliveryStatus)
                            {

                                case EFModel.Enums.DeliveryStatus.Processing:
                                    color = "primary";
                                    break;
                                case EFModel.Enums.DeliveryStatus.Shipped:
                                    color = "info";
                                    break;
                                case EFModel.Enums.DeliveryStatus.Delivered:
                                    color = "success";
                                    break;
                                case EFModel.Enums.DeliveryStatus.Cancelled:
                                    color = "warning";
                                    break;
                                case EFModel.Enums.DeliveryStatus.Returned:
                                    color = "danger";
                                    break;
                                default:
                                    color = "info";
                                    break;

                            }

                            <td class="text-@color ">@order.DeliveryStatus</td>


                        }


                        <td>
                            <a asp-action="OrderProducts" asp-route-id="@order.Id" class="btn btn-info">Product List</a>
                        </td>

                        <td>

                            <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-success">Edit</a>

                        </td>

                    </tr>



                }




            </tbody>


        </table>

    </div>

    <div class="dropdown-menu dropdown-menu-xs dropdown-menu-end">
        <ul class="link-check">
            <li>
                <span>Show</span>
            </li>
            <li class="@(@ViewBag.rowsPerPage == 10 ? "active" : "hide")">
                <a asp-action="Index"
                   asp-route-pageSize="2">
                    2
                </a>
            </li>
            <li class="@(@ViewBag.rowsPerPage == 20 ? "active" : "hide")">
                <a asp-action="Index"
                   asp-route-pageSize="4">
                    4
                </a>
            </li>
            <li class="@(@ViewBag.rowsPerPage == 50 ? "active" : "hide")">
                <a asp-action="Index"
                   asp-route-pageSize="6">
                    6
                </a>
            </li>
        </ul>
    </div>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <div class="container d-flex flex-direction-row justify-content-center align-content-center align-items-center">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-pageSize=@ViewBag.rowsPerPage
           class="btn @prevDisabled"
           style="text-decoration: none;
                            color: white;
                            background: #0FAC81;
                            padding: 7px 10px;
                            border-radius: 2px;
                            margin: 7px 3px;
                            font-size: 15px;"
           onMouseOver="this.style.backgroundColor='rgb(15 172 129 / 85%)'"
           onmouseout="this.style.backgroundColor='#0FAC81'">
            &laquo; Previous
        </a>
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-pageSize=@ViewBag.rowsPerPage
           class="btn @nextDisabled"
           style="text-decoration: none;
                            color: white;
                            background: #0FAC81;
                            padding: 7px 10px;
                            border-radius: 2px;
                            margin: 7px 3px;
                            font-size: 15px;"
           onMouseOver="this.style.backgroundColor='rgb(15 172 129 / 85%)'"
           onmouseout="this.style.backgroundColor='#0FAC81'">
            Next &raquo;
        </a>
    </div>

</div>









@*@foreach (var order in Model)
                              {
        <div class="nk-tb-item">
            <div class="nk-tb-col">
                <span class="tb-lead"><a href="#">#@order.Id</a></span>
            </div>
            <div class="nk-tb-col tb-col-sm">
                <div class="user-card">
                        <div class="user-avatar sm bg-purple-dim">
                            <span>@order.User.FirstName[0]@order.User.LastName[0]</span>
                        </div>
                        <div class="user-name">
                            <span class="tb-lead">@order.User.FirstName @order.User.LastName</span>
                        </div>
                    </div>
            </div>
            <div class="nk-tb-col tb-col-md">
                <span class="tb-sub">@order.OrderDate.ToShortDateString()</span>
            </div>
            <div class="nk-tb-col">
                <span class="tb-sub tb-amount">@order.TotalPrice <span>EGP</span></span>
            </div>

            <div class="nk-tb-col">
                <span class="tb-sub tb-amount">@(@order.IsPaid ? "Card" : "Cash")</span>
            </div>

            @{
                var deliveryStatus = @order.DeliveryStatus;

                switch (deliveryStatus)
                {
                    case EFModel.Enums.DeliveryStatus.Processing:
                        <text>
                            <div class="nk-tb-col">
                                <span class="badge badge-dot badge-dot-xs bg-primary">
                                    Processing
                                </span>
                            </div>
                        </text>
                        break;

                    case EFModel.Enums.DeliveryStatus.Shipped:
                        <text>
                            <div class="nk-tb-col">
                                <span class="badge badge-dot badge-dot-xs bg-info">
                                    Shipped
                                </span>
                            </div>
                        </text>
                        break;

                    case EFModel.Enums.DeliveryStatus.Delivered:
                        <text>
                            <div class="nk-tb-col">
                                <span class="badge badge-dot badge-dot-xs bg-success">
                                    Delivered
                                </span>
                            </div>
                        </text>
                        break;

                    case EFModel.Enums.DeliveryStatus.Cancelled:
                        <text>
                            <div class="nk-tb-col">
                                <span class="badge badge-dot badge-dot-xs bg-warning">
                                    Cancelled
                                </span>
                            </div>
                        </text>
                        break;

                    case EFModel.Enums.DeliveryStatus.Returned:
                        <text>
                            <div class="nk-tb-col">
                                <span class="badge badge-dot badge-dot-xs bg-danger">
                                    Returned
                                </span>
                            </div>
                        </text>
                        break;

                    default:
                        <text>
                            <div class="nk-tb-col">
                                <span class="badge badge-dot badge-dot-xs bg-secondary">
                                    Not Known
                                </span>
                            </div>
                        </text>
                        break;

                          }
                      }

        </div>
    }*@



